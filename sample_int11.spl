//EXTRACTING FUNCTION NUMBER FROM USER STACK
alias userSP R0;
userSP=SP;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;
alias funNum R1;
funNum=[[PTBR+2*((userSP-5)/512)]*512+(userSP-5)%512];
//IMPLEMENTING ........WAIT SYSTEM CALL
if(funNum==13)then
alias pid R2;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=13;
pid=[[PTBR+2*((userSP-4)/512)]*512+(userSP-4)%512];
//IF PID IS NOT IN VALID RANGE
if(pid<0||pid>15||pid==[SYSTEM_STATUS_TABLE+1]||[PROCESS_TABLE+pid*16+4]==TERMINATED)then
[[PTBR+2*((userSP-1)/512)]*512+(userSP-1)%512]=-1;
//RESET MODE FLAG
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
ireturn;
endif;
//IF PID IS VALID 
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4]=WAIT_PROCESS;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+5]=pid;
multipush(R0,R1,R2);
call MOD_5;
multipop(R0,R1,R2);
[[PTBR+2*((userSP-1)/512)]*512+(userSP-1)%512]=0;
//RESET MODE FLAG
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
ireturn;
endif;
//IMPLEMENTING ...........SIGNAL SYSTEM CALL
if(funNum==14)then
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=14;
alias pid R2;
pid=0;
while(pid<16)do
if([PROCESS_TABLE+pid*16+4]==WAIT_PROCESS&&[PROCESS_TABLE+pid*16+5]==[SYSTEM_STATUS_TABLE+1])then
[PROCESS_TABLE+pid*16+4]=READY;
endif;
pid=pid+1;
endwhile;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
ireturn;
endif;
//IMPLEMENTING .....GETPID
if(funNum==11)then
[[PTBR+2*((userSP-1)/512)]*512+(userSP-1)%512]=[SYSTEM_STATUS_TABLE+1];
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
ireturn;
endif;
//IMPLEMENTING .....GETP---PID
if(funNum==12)then
[[PTBR+2*((userSP-1)/512)]*512+(userSP-1)%512]=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+2];
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
ireturn;
endif;




