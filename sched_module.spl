SP=SP+1;
[SP]=BP;
alias currentPID R0;
currentPID=[SYSTEM_STATUS_TABLE+1];
alias process_table_entry R1;
process_table_entry=PROCESS_TABLE+(currentPID*16);
[process_table_entry+12]=SP%512;
[process_table_entry+14]=PTBR;
[process_table_entry+15]=PTLR;
alias newPID R2;
currentPID=currentPID+1;
newPID=0;
while(currentPID<=15)do
    if([PROCESS_TABLE+currentPID*16+4]==CREATED||[PROCESS_TABLE+currentPID*16+4]==READY)then
         newPID=currentPID;
          break;
  else currentPID=currentPID+1;
       endif;
endwhile;

alias new_process_table R3;
new_process_table = PROCESS_TABLE + (newPID * 16);


SP =  [new_process_table + 11] * 512 + [new_process_table + 12] ;
PTBR = [new_process_table + 14];
PTLR = [new_process_table + 15];
[SYSTEM_STATUS_TABLE+1]=newPID;
if([new_process_table + 4] == CREATED) then
     if([new_process_table+3]!=-1)then
       multipop(BP);
        endif;
	[new_process_table + 4] = RUNNING;
	SP = [new_process_table + 13];
        [new_process_table+9]=0;
	ireturn;
endif;
[new_process_table + 4] = RUNNING;
BP=[SP];
SP=SP-1;
return;
