


alias funNum R1;
//IMPLEMENTING GET ..............FREE PAGE
  if(funNum==1)then
  [SYSTEM_STATUS_TABLE+3]=[SYSTEM_STATUS_TABLE+3]+1;
//CHECKING THE MEMORY FREE COUNT IN SYSTEM STATUS TABLE
     while([SYSTEM_STATUS_TABLE+2]==0)do
    [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4]=WAIT_MEM;
    call MOD_5;
     endwhile;
[SYSTEM_STATUS_TABLE+3]=[SYSTEM_STATUS_TABLE+3]-1;
[SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]-1;
//FINDING FREE PAGE AND SETTING ENTRY TO 1
alias pageNum R5;
pageNum=76;
while(pageNum<128)do
   if([MEMORY_FREE_LIST+pageNum]==0)then
      [MEMORY_FREE_LIST+pageNum]=1;
       R0=pageNum;
       break;
     endif;
     pageNum=pageNum+1;
     endwhile;
   return;
breakpoint;
endif;

//IMPLEMENTING ...........RELEASE PAGE
   if(funNum==2)then
   [MEMORY_FREE_LIST+R2]=[MEMORY_FREE_LIST+R2]-1;
 //IF PAGE BECOME FREE THEN INCREMENT MEM FREE COUNT
    if([MEMORY_FREE_LIST+R2]==0)then
   [SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]+1;
     endif;
  alias pid R5;
     pid=0;
//SETTING ALL PROCESS WHICH IS IN WAIT_MEM TO READY
   while(pid<16)do
    if([PROCESS_TABLE+pid*16+4]==WAIT_MEM)then
     [PROCESS_TABLE+pid*16+4]=READY;
       endif;
       pid=pid+1;
       endwhile;
      return ;
      breakpoint;
     endif;
//IMPLEMENTING ....GET ..............CODE ...PAGE
if(funNum==5)then
alias pid R5;
alias count R8;
pid=0;
count=0;
alias blockNum R2;
alias freepage R6;
while(pid<16)do
count=4;
while(count<8)do

if([DISK_MAP_TABLE+pid*10+count]==blockNum)then
  if([PAGE_TABLE_BASE+pid*20+2*(count)+1]!="0000")then
  [MEMORY_FREE_LIST+[PAGE_TABLE_BASE+pid*20+2*count]]=[MEMORY_FREE_LIST+[PAGE_TABLE_BASE+pid*20+2*count]]+1;
  R0=[PAGE_TABLE_BASE+pid*20+2*(count)];
  return;
  endif;
endif;
 count=count+1;
  endwhile;
  pid=pid+1;
   endwhile;
//PAGE IS NOT FOUND IN MEMORY
multipush(R0,R1,R2,R3,R4,R5);
R1=1;
call MOD_2;
freepage=R0;
multipop(R0,R1,R2,R3,R4,R5);
multipush(R0,R1,R2,R3,R4,R5,R6);
R1=2;
R4=blockNum;
R2=[SYSTEM_STATUS_TABLE+1];
R3=freepage;
call MOD_4;
multipop(R0,R1,R2,R3,R4,R5,R6);
R0=freepage;
breakpoint;
return;
endif;
//IMPLEMENTING RELEASE .......BLOCK FUNCTION
if(funNum==4)then
[DISK_FREE_LIST+R2]=0;
 return;
endif;

//IMPLEMENTING GET ........FREE BLOCK FUNCTION
   if(funNum==3)then
  alias count R2;
   count=DISK_FREE_AREA;
while(count<DISK_SWAP_AREA)do
if([DISK_FREE_LIST+count]==0)then
   [DISK_FREE_LIST+count]=1;
    break;
 endif;
count=count+1;
endwhile;

if(count==DISK_SWAP_AREA)then
   R0=-1;
  
  return ;
 endif;
 R0=count;
  return;
  endif;







       
